<!doctype html>
<html>
  <head>
    <title>Literally Canvas</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <link href="css/bootstrap-custom.css" rel="stylesheet">
    <link href="css/main.css" rel="stylesheet">

    <link href="lib/css/colorpicker.css" rel="stylesheet">
    <link href="lib/css/literally.css" rel="stylesheet">

    <!-- ew ew ew ew ew but necessary -->
    <link href="css/jquery-ui.css" rel="stylesheet">

    <link href='http://fonts.googleapis.com/css?family=Finger+Paint'
      rel='stylesheet' type='text/css'>

    <style type="text/css">{{ pygments_css }}</style>

    <script type="text/javascript">

      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-36534121-1']);
      _gaq.push(['_trackPageview']);

      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();

    </script>
  </head>

  <body>
    <div class="container">

      <a name="demo"></a>
      <h1 class="title">
        <span class="title-literally">Literally</span>
        <span class="title-canvas">&ldquo;Canvas&rdquo;</span>
      </h1>

      <div class="row">
        <div class="span3">
          <ul class="nav nav-list">
            <li><a href="#demo">Demo</a></li>
            <li><a href="#about">About</a></li>
            <li><a href="#usage">Usage</a></li>
            <li><a href="#supported-browsers">Supported Browsers</a></li>
            <li><a href="#api">&ldquo;API&rdquo;</a></li>
            <li><a href="#future">The Future</a></li>
            <li><a href="#contributing">Contributing</a></li>
            <li><a href="#related-projects">Related Projects</a></li>
          </ul>
        </div>

        <div class="span6">

          <div class="demo">
            <div class="literally"><canvas></canvas></div>
            <button class='get-image'>Open as image</button>
            <div class="share-to-imgur">
              <button>Upload to Imgur</button>
              <span class="imgur-url">&nbsp;</span>
            </div>
          </div>

        </div>

        <div class="span3">
          <div class="example-link">
            <a href="example.html">Fullscreen demo &gt;&gt;</a>
          </div>

          <div class="github">
            <a href="http://github.com/literallycanvas/literallycanvas">
              Fork me on Github &gt;&gt;
            </a>
          </div>

          <div class="downloads">
            <a href="https://github.com/literallycanvas/literallycanvas/archive/v0.2.zip">
              Download v0.2
            </a><br>
            The <tt>lib/</tt> folder contains the images, CSS, and Javascript.
            The &ldquo;fat&rdquo; versions include jQuery 1.8.2 and Underscore.js. The
            &ldquo;thin&rdquo; versions do not.
          </div>
        </div>
      </div>

      <hr><a name="about"></a>
      <div class="row">
        <div class="span6 offset3 about">
          <h2>About</h2>

          <p>
          Literally Canvas is an extensible, <strong>open source</strong>
            (BSD-licensed), HTML5 drawing widget that currently supports a
            minimal set of drawing operations. You can draw, erase, set the
            color with the eyedropper, undo, redo, pan, and zoom. It depends on
            <a href="http://jquery.com/">jQuery</a> and
            <a href="http://underscorejs.org/">Underscore.js</a>.
          </p>

          <p>
            The instance at the top of this page uses the
            <a href="http://jqueryui.com/resizable/">
            <tt>resizable</tt> feature of jQuery UI</a> for its resize feature,
            to demonstrate that you can resize the container element with
            impunity. Resizing on the right edge of the canvas causes
            weirdness, but you get the idea.
          </p>

          <h3>Why?</h3>

          <p>
            If you look at <a href="#related-projects">Related Projects</a> at
            the bottom of the page, you can see that this isn't the only HTML5
            drawing tool on the block. However, it is unique in several ways:
          </p>

          <ul>
            <li>
              <strong>It's open source.</strong> Other drawing tools seem
              to be almost exclusively provided by businesses whose core
              feature is their drawing tool or freelancers who want you to
              pay them to adapt their work to your use case. We have nothing
              against those people, but it's important that free alternatives
              exist.
            </li>

            <li>
              <strong>It's a widget, not an application.</strong> Literally
              Canvas is intended to live inside your application in the way
              that works best for you. It doesn't take over your screen. It
              doesn't (intentionally) gobble up events. It tries to keep its UI
              to a minimum.
            </li>

            <li>
              <strong>It wants to be extended.</strong> We've tried to design
              it with extensibility in mind. There's no formal tool API, but if
              you have specific needs, we think it's easy enough to read the
              source and figure out how to add what you want. We hope to
              improve and expose the tool API in future releases.
            </li>
          </ul>

          <p>
            Literally Canvas was created in part to replace the object drawing
            tool in <a href="http://www.playbuildy.com">Buildy</a>. We hope
            you're inspired to use it to make new things of your own!
          </p>
        </div>
      </div>

      <hr><a name="usage"></a>
      <div class="row">
        <div class="span6 offset3">
          <h2>Usage</h2>
          {{ "code_samples/simple.html" | code }}
          {{ "code_samples/simple.js" | code }}
          {{ "code_samples/options.js" | code }}
        </div>
      </div>

      <hr><a name="supported-browsers"></a>
      <div class="row">
        <div class="span6 offset3">
          <h2>Supported Browsers</h2>
          <table class="table table-striped table-bordered">
            <thead>
              <tr>
                <th>Browser</th>
                <th>Support</th>
              </tr>
            </thead>
            <tbody>
              <tr><td>Chrome</td><td>Awesome (this is where we test)</td></tr>
              <tr><td>Safari</td><td>Awesome</td></tr>
              <tr><td>iOS</td><td>Awesome</td></tr>
              <tr>
                <td>Firefox</td>
                <td>
                  Requires a shim for <tt>&lt;input type="range"&gt;</tt>
                  which we don't provide. Falls back to a normal input field,
                  which works but isn't as nice.
                </td>
              </tr>

              <tr><td>Opera</td><td>???</td></tr>
              <tr><td>Android</td><td>???</td></tr>
              <tr><td>IE 10</td><td>???</td></tr>
              <tr><td>IE 9</td><td>Nope</td></tr>
            </tbody>
          </table>
        </div>
      </div>

      <hr><a name="api"></a>
      <div class="row">
        <div class="span6 offset3">
          <h2>&ldquo;API&rdquo;</h2>

          <div class="alert"><strong>It's in quotes for a reason.</strong></div>

          <div class="well">
            <h4><tt>$('.literally').literallycanvas(options)</tt></h4>

            <h5><tt>backgroundColor</tt></h5>
            CSS color value of the initial background. Default <tt>rgb(230,
              230, 230)</tt>.

            <h5><tt>imageURLPrefix</tt></h5>
            URL you're serving the contents of <tt>lib/img</tt> from. Default
            <tt>lib/img</tt>.

            <h5><tt>keyboardShortcuts</tt></h5>
            If <tt>true</tt>, bind keyboard shortcuts. Currently only implements
            panning with the arrow keys. Default <tt>true</tt>.

            <h5><tt>sizeToContainer</tt></h5>
            If <tt>true</tt>, resize the <tt>&lt;canvas&gt;</tt> element to fit
            the height of its containing <tt>&lt;div class="literally"&gt;</tt>
            element. The alternative is <tt>false</tt>, which will not resize the 
            <tt>&lt;canvas&gt;</tt> element at all. Default <tt>true</tt>.

            <h5><tt>toolClasses</tt></h5>
            List of tool classes to use. Unless you're writing your own tool, you
            probably don't need to change this setting. Includes all tools by
            default.
          </div>

          <div class="well">
            <h4><tt>$('.literally').canvasForExport()</tt></h4>
            Canvas object containing the user's complete drawing. (Currently
            just the visible canvas area, will probably change to include all
            paths.)
          </div>
        </div>
      </div>

      <hr><a name="future"></a>
      <div class="row">
        <div class="span6 offset3">

          <h2>The Future</h2>
          <ul>
            <li>A better, smaller color picker</li>
            <li>Brush API</li>
            <li>Nicer-looking brushes</li>
            <li>Interactive tools (text, shapes)</li>
          </ul>

          <a href="https://github.com/literallycanvas/literallycanvas/issues/new">
            Suggest a feature on Github</a>

        </div>
      </div>

      <hr><a name="contributing"></a>
      <div class="row">
        <div class="span6 offset3">

          <h2>Contributing</h2>
          <p>
            We would be excited to see contributions of any form. New brushes,
            optimizations, feature requests, use cases, designs, bug reports
            &ndash; you name it, we want it! Just head on over to <a
              href="http://github.com/literallycanvas/literallycanvas">
              github.com/literallycanvas/literallycanvas</a> and get started.
          </p>

          <p>
            One particular area where we'd like some help is in styling the
            toolbar. If glitzy CSS-based UI is your thing, we'd love to hear
            your suggestions or merge your pull requests.
          </p>

        </div>
      </div>

      <hr><a name="related-projects"></a>
      <div class="row">
        <div class="span6 offset3">

          <h2>Related Projects</h2>
          <p>
            The web has only recently arrived at the point where this sort of
            project is feasible to implement without Flash, but there are
            several other projects with similar features. If Literally Canvas
            isn't quite what you're looking for, we encourage you to check them
            out and give them some love. All of them use Canvas unless
            otherwise specified.
          </p>

          <ul>
            <li>
              <a href="http://sta.sh/muro/">DeviantArt Muro</a>:
              Sophisticated, comprehensive drawing
            </li>
            <li>
              <a href="http://bomomo.com/">Bomomo</a>:
              Whimsical doodling
            </li>
            <li>
              <a href="http://mudcu.be/sketchpad/">SketchPad</a>:
              Simple drawing
            </li>
            <li>
              <a href="http://sketchpad.io/">sketchpad.io</a>:
              Non-destructive, 2.0 version of SketchPad
            </li>
            <li>
              <a href="https://github.com/mudcube/Sketch.js">Sketch.js</a>:
              Simplistic, open source version of
              <a href="http://sketchpad.io/">sketchpad.io</a>
            </li>
            <li>
              <a href="http://hakim.se/experiments/html5/sketch/">Sketch</a>:
              Cartoon-style sketches with gallery
            </li>
            <li>
              <a href="http://zwibbler.com/">Zwibbler</a>:
              Vector graphics
            </li>
            <li>
              <a href="http://figurepool.com/editor">FigurePool</a>:
              SVG diagramming
            </li>
            <li>
              <a href="http://svg-edit.googlecode.com/svn/trunk/editor/svg-editor.html">
                SVG-edit</a>:
              Open source SVG non-destructive drawing
            </li>
            <li>
              <a href="http://editor.method.ac/">Method Draw</a>:
              SVG non-destructive drawing, based on SVG-edit
            </li>
            <li>
              <a href="http://www.williammalone.com/articles/create-html5-canvas-javascript-drawing-app/">
                Creating a Drawing App with HTML5 Canvas and Javascript</a>:
              Learn a bit about how to do these things yourself!
            </li>
          </ul>
        </div>
      </div>

    </div>

    <script src="lib/js/literallycanvas.fat.js"></script>
    <script src="js/jquery-ui-just-resizable.js"></script>
    <script src="js/docs.js"></script>
  </body>
</html>
